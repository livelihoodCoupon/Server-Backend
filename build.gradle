plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'
}

group = 'com.livelihoodCoupon'
version = '0.0.1-SNAPSHOT'
description = 'livelihoodCoupon'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 로깅, 모니터링 관련
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // PostGIS 의존성, PostgreSQL 드라이버 추가
    implementation 'org.hibernate.orm:hibernate-spatial:6.5.2.Final'
    runtimeOnly 'org.postgresql:postgresql'
}

checkstyle {
    toolVersion = '11.0.0'
    configFile = rootProject.file('src/main/resources/codeConvention/Naver-CheckStyle-Rules.xml')
    ignoreFailures = false
    showViolations = true
}

tasks.withType(Checkstyle).configureEach {
    reports {
        html.required = true
        xml.required = false
        html.outputLocation = layout.buildDirectory.file("reports/checkstyle/${name}.html").get().asFile
    }
}

tasks.named('check') {
    dependsOn checkstyleMain
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('checkstyleTest') {
    enabled = false
}
