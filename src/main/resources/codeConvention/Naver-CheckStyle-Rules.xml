<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!-- Naver coding convention for Java (Checkstyle 10.x 호환) -->

<module name="Checker">
    <property name="severity" value="warning"/>
    <property name="fileExtensions" value="java"/>
    <property name="charset" value="UTF-8"/>

    <!-- LF 체크 -->
    <module name="RegexpMultiline">
        <property name="format" value="\r\n"/>
        <property name="message" value="[newline-lf] Line must end with LF, not CRLF"/>
    </module>

    <!-- EOF 체크 -->
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>

    <!-- 트레일링 스페이스 제거 -->
    <module name="RegexpSingleline">
        <property name="format" value="^(?!\s+\* $).*?\s+$"/>
        <property name="message" value="[no-trailing-spaces] Line has trailing spaces."/>
    </module>

    <!-- 라인 길이 -->
    <property name="tabWidth" value="4"/>
    <!-- LineLength module removed -->

    <module name="TreeWalker">

        <!-- Naming 규칙 -->
        <module name="AbbreviationAsWordInName">
            <property name="ignoreFinal" value="false"/>
            <property name="allowedAbbreviationLength" value="1"/>
            <property name="allowedAbbreviations" value="DAO,BO"/>
            <message key="abbreviation.as.word"
                     value="[list-uppercase-abbr] Abbreviation in name ''{0}'' must contain no more than {1}"/>
        </module>

        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
                     value="[package-lowercase] Package name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="TypeName">
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="[class-interface-lower-camelcase] Type name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="[method-lower-camelcase] Method name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
            <message key="name.invalidPattern"
                     value="[var-lower-camelcase] Member name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="[var-lower-camelcase] Parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="LocalVariableName">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
            <property name="allowOneCharVarInForLoop" value="true"/>
            <message key="name.invalidPattern"
                     value="[var-lower-camelcase][avoid-1-char-var] Local variable name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- Class 관련 규칙 -->
        <module name="OneTopLevelClass"/>
        <message key="name.invalidPattern"
                 value="[1-top-level-class] Top-level class {0} has to reside in its own source file."/>

        <module name="AvoidStarImport">
            <property name="allowStaticMemberImports" value="true"/>
            <message key="import.avoidStar"
                     value="[avoid-star-import] Using the ''.*'' form of import should be avoided - {0}."/>
        </module>

        <module name="ModifierOrder"/>

        <module name="AnnotationLocation">
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, RECORD_DEF, METHOD_DEF, CTOR_DEF"/>
            <property name="allowSamelineSingleParameterlessAnnotation" value="true"/>
            <message key="annotation.location.alone"
                     value="[newline-after-annotation] Annotation ''{0}'' should be alone on line."/>
        </module>

        <!-- 기타 스타일 -->
        <module name="OneStatementPerLine"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="ArrayTypeStyle"/>
        <module name="UpperEll"/>

        <!-- Indentation -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\t* "/>
            <property name="message" value="[indentation-tab] Indent must use tab characters"/>
            <property name="ignoreComments" value="true"/>
        </module>
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="4"/>
            <property name="lineWrappingIndentation" value="4"/>
            <property name="arrayInitIndent" value="4"/>
        </module>

        <!-- Braces -->
        <module name="LeftCurly"/>
        <module name="RightCurly">
            <property name="option" value="alone"/>
            <property name="tokens"
                      value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT, RECORD_DEF"/>
        </module>
        <module name="RightCurly">
            <property name="option" value="same"/>
            <property name="tokens"
                      value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO, LITERAL_SWITCH"/>
        </module>
        <!-- NeedBraces module removed -->

        <!-- Line Wrapping -->
        <module name="NoLineWrap">
            <property name="tokens" value="PACKAGE_DEF, IMPORT"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="option" value="NL"/>
        </module>
        <module name="OperatorWrap">
            <property name="option" value="NL"/>
        </module>

        <!-- Import 순서 -->
        <module name="ImportOrder">
            <property name="groups"
                      value="java., javax., jakarta., org., net., /com\.(?!nhncorp|navercorp|naver)/, /(?!java\.|javax\.|com\.|org\.|net\.)/, com.nhncorp., com.navercorp., com.naver."/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="option" value="top"/>
            <property name="sortStaticImportsAlphabetically" value="true"/>
        </module>
        <module name="EmptyLineSeparator">
            <property name="tokens" value="METHOD_DEF, CTOR_DEF"/>
        </module>

        <!-- Whitespace -->
        <module name="WhitespaceAround"/>
        <module name="MethodParamPad"/>
        <module name="TypecastParenPad"/>
        <module name="GenericWhitespace"/>
        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA,SEMI"/>
        </module>
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="COMMA,SEMI"/>
        </module>
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="POST_INC, POST_DEC"/>
        </module>
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="INC, DEC, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT"/>
        </module>

        <!-- Suppressions -->
        <module name="SuppressionCommentFilter">
            <property name="offCommentFormat" value="@checkstyle:off"/>
            <property name="onCommentFormat" value="@checkstyle:on"/>
        </module>
        <module name="SuppressWithNearbyCommentFilter">
            <property name="commentFormat" value="@checkstyle:ignore"/>
            <property name="checkFormat" value=".*"/>
            <property name="influenceFormat" value="0"/>
        </module>
    </module>

    <!-- Exclude module-info.java -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <!-- Exclude generated sources -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="[\\/]generated[\\/].*"/>
    </module>
</module>
